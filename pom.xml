<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- TODO Put in License here! -->

	<!-- A reasonable base group -->
	<groupId>com.signalcollect</groupId>

	<!-- We set the artifactId to be the name of the git repo. No exceptions! -->
	<artifactId>signal-collect-maven-parent</artifactId>

	<version>0.0.1</version>

	<packaging>pom</packaging>

	<organization>
		<name>University of Zurich</name>
		<url>http://www.uzh.ch/</url>
	</organization>
	<!-- <ciManagement> <system>jenkins</system> <url>${jenkins.url}/job/${project.artifactId}</url> 
		</ciManagement> -->
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<inceptionYear>2015</inceptionYear>
	<developers>
		<developer>
			<id>admin</id>
			<email>admin@cotiviti.io</email>
			<roles>
				<role>packaging</role>
			</roles>
		</developer>
	</developers>
	<issueManagement>
		<url>${ghe.url.base}/${project.artifactId}/issues</url>
		<system>GitHub</system>
	</issueManagement>
	<name>Signal-Collect Parent POM</name>
	<description>Parent POM for Signal-Collect projects</description>
	<properties>
		<GITHUB.BRANCH>master</GITHUB.BRANCH>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.build.timestamp.format>yyyyMMddHHmmssSSS</maven.build.timestamp.format>
		<!-- The group on bitbucket (in case I change it later) -->
		<team.group.id>uzh</team.group.id>
		<jenkins.url>https://nexgen-admin.ci.cloudbees.com/job/OSS</jenkins.url>

		<!-- The base URL to nexus. This is for repositories and possibly weird 
			stuff we might do to nexus -->

		<ghe.host>github.com</ghe.host>
		<!-- The base URL for projects of our team on GitHub -->
		<ghe.url.base>https://${ghe.host}/${team.group.id}</ghe.url.base>

		<!-- The base url of a bitbucket project -->
		<git.url.base>git@github.com:${team.group.id}</git.url.base>

		<!-- The URL of a given project. This works with inheritence but probably 
			not multi-module -->
		<github.site.plugin.version>0.11</github.site.plugin.version>
		<git.url>${git.url.base}/${project.artifactId}.git</git.url>
		<git.http.url>${ghe.url.base}/${project.artifactId}</git.http.url>
		<github.global.server>github</github.global.server>
		<maven.javadoc.plugin.version>2.10.1</maven.javadoc.plugin.version>
		<maven.source.plugin.version>2.4</maven.source.plugin.version>
		<maven.deploy.plugin.version>2.8.2</maven.deploy.plugin.version>
		<maven.release.plugin.version>2.5.3</maven.release.plugin.version>
		<maven.jar.plugin.version>2.6</maven.jar.plugin.version>
		<maven.deploy.plugin.version>2.8.2</maven.deploy.plugin.version>
		<maven.install.plugin.version>2.5.2</maven.install.plugin.version>
		<maven.surefire.plugin.version>2.18.1</maven.surefire.plugin.version>
		<maven.compiler.plugin.version>3.2</maven.compiler.plugin.version>
		<maven.source.plugin.version>2.4</maven.source.plugin.version>
		<maven.compiler.jdk.version>1.8</maven.compiler.jdk.version>
		<maven.assembly.plugin.version>2.5.3</maven.assembly.plugin.version>
		<maven.eclipse.plugin.version>2.9</maven.eclipse.plugin.version>
		<maven.resources.plugin.version>2.7</maven.resources.plugin.version>
		<maven.build.helper.plugin.version>1.9.1</maven.build.helper.plugin.version>
		<maven.archetype.plugin.version>2.2</maven.archetype.plugin.version>
		<maven.exec.plugin.version>1.3.2</maven.exec.plugin.version>
		<maven.dependency.plugin.version>2.10</maven.dependency.plugin.version>
		<maven.clean.plugin.version>2.6.1</maven.clean.plugin.version>
		<maven.versions.plugin.version>2.1</maven.versions.plugin.version>
		<maven.site.plugin.version>3.4</maven.site.plugin.version>
		<maven.site.markdown.version>1.6</maven.site.markdown.version>
		<maven.project.report.plugin.version>2.8</maven.project.report.plugin.version>
		<maven.enforcer.plugin.version>1.4</maven.enforcer.plugin.version>
		<maven.javadoc.plugin.version>2.10.3</maven.javadoc.plugin.version>
		<nexus.staging.maven.plugin.version>1.6.6</nexus.staging.maven.plugin.version>
		<maven.gpg.plugin.version>1.6</maven.gpg.plugin.version>
		<maven.jxr.plugin.version>2.5</maven.jxr.plugin.version>
		<maven.javadoc.plugin.version>2.10.3</maven.javadoc.plugin.version>
		<maven.changes.plugin.version>2.11</maven.changes.plugin.version>
		<maven.changelog.plugin.version>2.3</maven.changelog.plugin.version>
		<maven.project.info.plugin.version>2.8</maven.project.info.plugin.version>
		<maven.pmd.plugin.version>3.5</maven.pmd.plugin.version>
		<maven.jdepend.plugin.version>2.0</maven.jdepend.plugin.version>
		<maven.taglist.plugin.version>2.4</maven.taglist.plugin.version>
		<maven.wagon.ssh.version>2.9</maven.wagon.ssh.version>
		<maven.graph.plugin.version>1.2.3</maven.graph.plugin.version>
		<maven.archetype.plugin.version>2.4</maven.archetype.plugin.version>
		<license.maven.plugin>2.11</license.maven.plugin>
		<site.path>site/${project.version}</site.path>
		<junit.version>4.12</junit.version>
		<json.version>20141113</json.version>
		<maven.cobertura.version>2.7</maven.cobertura.version>
		<joda.time.version>2.6</joda.time.version>
		<joda.convert.version>1.7</joda.convert.version>
		<test.coverage.percentage.required>95</test.coverage.percentage.required>
		<javax.inject.version>1</javax.inject.version>
		<fge.json.schema.validator>2.2.6</fge.json.schema.validator>
		<jacoco.maven.plugin.version>0.7.5.201505241946</jacoco.maven.plugin.version>
		<scala.maven.plugin.version>3.2.1</scala.maven.plugin.version>
		<scoverage.maven.plugin.version>1.0.5</scoverage.maven.plugin.version>
		<scoverage.scalac.plugin.version>1.1.0</scoverage.scalac.plugin.version>
		<scoverage.maven.plugin.failOnMinimumCoverage>false</scoverage.maven.plugin.failOnMinimumCoverage>
		<scalatest.maven.plugin.version>1.0</scalatest.maven.plugin.version>
		<scala.minor.version>2.11</scala.minor.version>
		<scala.release>7</scala.release>
		<logstash.logback.encoder.version>4.3</logstash.logback.encoder.version>

		<scalamock.version>3.2.1</scalamock.version>
		<lambdaworks.jacks.version>2.3.3</lambdaworks.jacks.version>
		<json4s.version>3.2.11</json4s.version>
		<json4s.native.version>3.2.11</json4s.native.version>
		<io.argonaut.version>6.1-M4</io.argonaut.version>
		<kryo.serialization.version>0.3.3</kryo.serialization.version>
		<scalaj.http.version>1.1.4</scalaj.http.version>
		<aspectj.version>1.8.4</aspectj.version>
		<apache.shiro.version>1.2.3</apache.shiro.version>
		<scalarx.version>0.2.6</scalarx.version>
		<ficus.version>1.1.2</ficus.version>
		<jsoup.version>1.8.1</jsoup.version>
		<java.websocket.version>1.3.0</java.websocket.version>
		<dispatch.core.version>0.11.2</dispatch.core.version>
		<nscala.time.version>1.6.0</nscala.time.version>
		<apache.jena.version>2.13.0</apache.jena.version>
		<parboiled.scala.version>1.1.6</parboiled.scala.version>
		<play2.version>2.4.0-M1</play2.version>
		<slf4j.version>1.7.9</slf4j.version>
		<log4j.version>1.2.17</log4j.version>
		<commons.io.version>2.0.1</commons.io.version>
		<commons.pool.version>1.5.4</commons.pool.version>
		<apache.httpclient.version>4.4</apache.httpclient.version>
		<jackson.version>2.5.1</jackson.version>
		<sesame.version>2.8.3</sesame.version>
		<scalaz.version>7.1.0</scalaz.version>
		<cucumber.scala.version>1.2.2</cucumber.scala.version>
		<cucumber.jvm.deps.version>1.0.3</cucumber.jvm.deps.version>
		<tototoshi.scala.csv.version>1.1.2</tototoshi.scala.csv.version>


		<scala.version>${scala.minor.version}.${scala.release}</scala.version>
		<scala.xml.version>${scala.minor.version}.0-M4</scala.xml.version>
		<scala.stack.start.mb>256</scala.stack.start.mb>
		<scala.stack.max.mb>2048</scala.stack.max.mb>
		<scalastyle.maven.plugin.version>0.1.0</scalastyle.maven.plugin.version>

		<akka.version>2.4.0</akka.version>
		<akka.http.version>1.0</akka.http.version>
		<akka.stream.version>1.0</akka.stream.version>
		<akka.inmemory.persistence.version>0.2.1</akka.inmemory.persistence.version>
		<akka.persistence.testkit.version>0.3.4</akka.persistence.testkit.version>
		<akka.persistence.cassandra.version>0.3.5</akka.persistence.cassandra.version>
		<typesafe.config.version>1.2.1</typesafe.config.version>
		<typesafe.scala.logging.version>3.1.0</typesafe.scala.logging.version>

		<site.target.url>github:http://uzh.github.io/${project.artifactId}/${site.path}</site.target.url>
		<trajano.wagon.version>2.0.5-SNAPSHOT</trajano.wagon.version>
		
		<akka.kryo.version>0.3.3</akka.kryo.version>
		<d3js.version>3.5.6</d3js.version>
		<introjs.version>1.0.0</introjs.version>
		<jquery.version>2.1.4</jquery.version>
		<reconnecting-websocket.version>1.0.0</reconnecting-websocket.version>
		<scalatest.version>2.2.5</scalatest.version>
		<scalacheck.version>1.12.4</scalacheck.version>
		<easymock.version>3.3.1</easymock.version>

	</properties>

	<!-- URL for site gen -->
	<url>http://${team.group.id}.github.io/${project.artifactId}/${site.path}/</url>
	<scm>
		<connection>scm:git:${git.http.url}</connection>
		<url>${git.http.url}/tree/${GITHUB.BRANCH}</url>
		<developerConnection>scm:git:${git.url}</developerConnection>
		<tag>signal-collect-maven-parent-0.0.1</tag>
	</scm>

	<!-- Currently nothing for site deployments, but that's coming in a future 
		version -->
	<distributionManagement>
		<snapshotRepository>
			<id>sc_ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>sc_ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
		<site>
			<id>githubsite</id>
			<name>GitHub Pages</name>
			<url>github:http://${team.group.id}.github.io/${project.artifactId}/${site.path}/</url>
		</site>
	</distributionManagement>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>${javax.inject.version}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>${json.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda.time.version}</version>
			</dependency>
			<dependency>
				<groupId>org.joda</groupId>
				<artifactId>joda-convert</artifactId>
				<version>${joda.convert.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.fge</groupId>
				<artifactId>json-schema-validator</artifactId>
				<version>${fge.json.schema.validator}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>${maven.wagon.ssh.version}</version>
			</dependency>
			<dependency>
				<groupId>org.json4s</groupId>
				<artifactId>json4s-native_${scala.minor.version}</artifactId>
				<version>${json4s.native.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scalamock</groupId>
				<artifactId>scalamock_${scala.minor.version}</artifactId>
				<version>${scalamock.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.scalamock</groupId>
				<artifactId>scalamock-scalatest-support_${scala.minor.version}</artifactId>
				<version>${scalamock.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.romix.akka</groupId>
				<artifactId>akka-kryo-serialization_${scala.minor.version}</artifactId>
				<version>${kryo.serialization.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-library</artifactId>
				<version>${scala.version}</version>
			</dependency>

			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-xml</artifactId>
				<version>${scala.xml.version}</version>
			</dependency>
			<dependency>
				<groupId>io.argonaut</groupId>
				<artifactId>argonaut_${scala.minor.version}</artifactId>
				<version>${io.argonaut.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scalaj</groupId>
				<artifactId>scalaj-http_${scala.minor.version}</artifactId>
				<version>${scalaj.http.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-all</artifactId>
				<version>${apache.shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>com.scalarx</groupId>
				<artifactId>scalarx</artifactId>
				<version>${scalarx.version}</version>
			</dependency>
			<dependency>
				<groupId>net.ceedubs</groupId>
				<artifactId>ficus_${scala.minor.version}</artifactId>
				<version>${ficus.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${jsoup.version}</version>
			</dependency>
			<dependency>
				<groupId>org.java-websocket</groupId>
				<artifactId>Java-WebSocket</artifactId>
				<version>${java.websocket.version}</version>
			</dependency>
			<dependency>
				<groupId>net.databinder.dispatch</groupId>
				<artifactId>dispatch-core_${scala.minor.version}</artifactId>
				<version>${dispatch.core.version}</version>
				<exclusions>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.github.nscala-time</groupId>
				<artifactId>nscala-time_${scala.minor.version}</artifactId>
				<version>${nscala.time.version}</version>
			</dependency>
			<dependency>
				<groupId>org.parboiled</groupId>
				<artifactId>parboiled-scala_${scala.minor.version}</artifactId>
				<version>${parboiled.scala.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>apache-jena-libs</artifactId>
				<version>${apache.jena.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-core</artifactId>
				<version>${apache.jena.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-arq</artifactId>
				<version>${apache.jena.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.fge</groupId>
				<artifactId>json-schema-validator</artifactId>
				<version>${fge.json.schema.validator}</version>
			</dependency>

			<dependency>
				<version>${akka.persistence.cassandra.version}</version>
				<groupId>com.github.krasserm</groupId>
				<artifactId>akka-persistence-cassandra_${scala.minor.version}</artifactId>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.github.krasserm</groupId>
				<artifactId>akka-persistence-testkit_${scala.minor.version}</artifactId>
				<version>${akka.persistence.testkit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.github.michaelpisula</groupId>
				<artifactId>akka-persistence-inmemory_${scala.minor.version}</artifactId>
				<version>${akka.inmemory.persistence.version}</version>
			</dependency>

			<dependency>
				<groupId>com.typesafe.play</groupId>
				<artifactId>play-json_${scala.minor.version}</artifactId>
				<version>${play2.version}</version>
			</dependency>
			<dependency>
				<groupId>com.typesafe.play</groupId>
				<artifactId>filters-helpers_${scala.minor.version}</artifactId>
				<version>${play2.version}</version>
			</dependency>
			<!-- required for IntegrationSpec -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${apache.httpclient.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.lambdaworks</groupId>
				<artifactId>jacks_${scala.minor.version}</artifactId>
				<version>${lambdaworks.jacks.version}</version>
			</dependency>
			<dependency>
				<groupId>com.typesafe.scala-logging</groupId>
				<artifactId>scala-logging_${scala.minor.version}</artifactId>
				<version>${typesafe.scala.logging.version}</version>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<version>${akka.version}</version>
				<artifactId>akka-persistence-experimental_${scala.minor.version}</artifactId>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<version>${akka.stream.version}</version>
				<artifactId>akka-stream-experimental_${scala.minor.version}</artifactId>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<version>${akka.stream.version}</version>
				<artifactId>akka-stream-testkit-experimental_${scala.minor.version}</artifactId>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<version>${akka.version}</version>
				<artifactId>akka-actor_${scala.minor.version}</artifactId>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<version>${akka.version}</version>
				<artifactId>akka-contrib_${scala.minor.version}</artifactId>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<version>${akka.version}</version>
				<artifactId>akka-agent_${scala.minor.version}</artifactId>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<version>${akka.version}</version>
				<artifactId>akka-remote_${scala.minor.version}</artifactId>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<version>${akka.version}</version>
				<artifactId>akka-testkit_${scala.minor.version}</artifactId>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<version>${akka.version}</version>
				<artifactId>akka-cluster_${scala.minor.version}</artifactId>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<version>${akka.version}</version>
				<artifactId>akka-multi-node-testkit_${scala.minor.version}</artifactId>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<version>${akka.http.version}</version>
				<artifactId>akka-http-core-experimental_${scala.minor.version}</artifactId>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<version>${akka.http.version}</version>
				<artifactId>akka-http-spray-json-experimental_${scala.minor.version}</artifactId>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<version>${akka.http.version}</version>
				<artifactId>akka-http-testkit-experimental_${scala.minor.version}</artifactId>
			</dependency>
			<dependency>
				<groupId>com.typesafe</groupId>
				<version>${typesafe.config.version}</version>
				<artifactId>config</artifactId>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>1.3.170</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-nop</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>${commons.pool.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>1.8.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>${wagon.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openrdf.sesame</groupId>
				<artifactId>sesame-runtime</artifactId>
				<version>${sesame.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openrdf.sesame</groupId>
				<artifactId>sesame-repository-sail</artifactId>
				<version>${sesame.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openrdf.sesame</groupId>
				<artifactId>sesame-sail-memory</artifactId>
				<version>${sesame.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openrdf.sesame</groupId>
				<artifactId>sesame-rio-rdfxml</artifactId>
				<version>${sesame.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scalaz</groupId>
				<artifactId>scalaz-core_${scala.minor.version}</artifactId>
				<version>${scalaz.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scalacheck</groupId>
				<artifactId>scalacheck_${scala.minor.version}</artifactId>
				<version>${scalacheck.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.tototoshi</groupId>
				<artifactId>scala-csv_${scala.minor.version}</artifactId>
				<version>${tototoshi.scala.csv.version}</version>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-jvm-deps</artifactId>
				<version>${cucumber.jvm.deps.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-scala_${scala.minor.version}</artifactId>
				<version>${cucumber.scala.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-junit</artifactId>
				<version>${cucumber.scala.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
			</extension>
		</extensions>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${license.maven.plugin}</version>
					<configuration>
						<header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</header>
						<properties>
							<owner>Cotiviti Labs</owner>
							<email>nexgen.admin@cotiviti.io</email>
						</properties>
						<excludes>
							<!-- TODO Fix licensing for .md and avro. -->
							<exclude>**/*.md</exclude>
							<exclude>**/LICENSE</exclude>
							<exclude>**/.*</exclude>
							<exclude>**/*.txt</exclude>
							<exclude>src/test/resources/**</exclude>
							<exclude>src/main/resources/**</exclude>
							<exclude>src/main/avro/**</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.maven.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>${nexus.staging.maven.plugin.version}</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>uzhossrh</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven.site.plugin.version}</version>
					<configuration>
						<!-- <skipDeploy>true</skipDeploy> -->
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.doxia</groupId>
							<artifactId>doxia-module-markdown</artifactId>
							<version>${maven.site.markdown.version}</version>
						</dependency>
						<dependency>
							<groupId>net.trajano.wagon.iht</groupId>
							<artifactId>wagon-git</artifactId>
							<version>${trajano.wagon.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${maven.cobertura.version}</version>
					<configuration>
						<instrumentation>
							<ignores>
							</ignores>
							<excludes>
							</excludes>
						</instrumentation>
						<check>
							<branchRate>${test.coverage.percentage.required}</branchRate>
							<lineRate>${test.coverage.percentage.required}</lineRate>
							<haltOnFailure>true</haltOnFailure>
							<totalBranchRate>${test.coverage.percentage.required}</totalBranchRate>
							<totalLineRate>${test.coverage.percentage.required}</totalLineRate>
							<packageLineRate>${test.coverage.percentage.required}</packageLineRate>
							<packageBranchRate>${test.coverage.percentage.required}</packageBranchRate>
							<!-- <regexes> <regex> <pattern>com.example.reallyimportant.*</pattern> 
								<branchRate>90</branchRate> <lineRate>80</lineRate> </regex> <regex> <pattern>com.example.boringcode.*</pattern> 
								<branchRate>40</branchRate> <lineRate>30</lineRate> </regex> </regexes> -->
						</check>
					</configuration>

				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven.release.plugin.version}</version>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<useReleaseProfile>true</useReleaseProfile>
						<releaseProfiles>release,gpgsigning</releaseProfiles>
						<goals>deploy</goals>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven.source.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven.javadoc.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven.deploy.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven.jar.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven.install.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-archetype-plugin</artifactId>
					<version>${maven.archetype.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.plugin.version}</version>
					<configuration>
						<skipTests>false</skipTests>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven.resources.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven.eclipse.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven.gpg.plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
					<configuration>
						<source>${maven.compiler.jdk.version}</source>
						<target>${maven.compiler.jdk.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven.assembly.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven.dependency.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven.clean.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${maven.exec.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${maven.versions.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>${maven.project.report.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.kuali.maven.plugins</groupId>
					<artifactId>graph-maven-plugin</artifactId>
					<version>${maven.graph.plugin.version}</version>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.mycila</groupId>
										<artifactId>
											license-maven-plugin
										</artifactId>
										<versionRange>
											[2.11,)
										</versionRange>
										<goals>
											<goal>format</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>report</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${maven.build.helper.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.scalatest</groupId>
					<artifactId>scalatest-maven-plugin</artifactId>
					<version>${scalatest.maven.plugin.version}</version>
					<configuration>
						<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
						<junitxml>.</junitxml>
						<filereports>tests.txt</filereports>
					</configuration>
					<executions>
						<execution>
							<id>test</id>
							<goals>
								<goal>test</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>${scala.maven.plugin.version}</version>
					<configuration>
						<scalaVersion>${scala.version}</scalaVersion>
						<encoding>UTF-8</encoding>
						<useZincServer>false</useZincServer>
						<jvmArgs>
							<jvmArg>-Xms${scala.stack.start.mb}m</jvmArg>
							<jvmArg>-Xmx${scala.stack.max.mb}m</jvmArg>
						</jvmArgs>
						<args>
							<arg>-unchecked</arg>
							<arg>-deprecation</arg>
							<arg>-Xlint</arg>
							<!-- <arg>–Xfatal-warnings</arg> -->
							<arg>-Ywarn-dead-code</arg>
							<arg>-language:_</arg>
							<arg>-target:jvm-${maven.compiler.jdk.version}</arg>
						</args>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.scalastyle</groupId>
					<artifactId>scalastyle-maven-plugin</artifactId>
					<version>${scalastyle.maven.plugin.version}</version>
					<configuration>
						<verbose>false</verbose>
						<failOnViolation>true</failOnViolation>
						<includeTestSourceDirectory>true</includeTestSourceDirectory>
						<failOnWarning>false</failOnWarning>
						<sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
						<testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
						<configLocation>${basedir}/lib/scalastyle_config.xml</configLocation>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.scoverage</groupId>
					<artifactId>scoverage-maven-plugin</artifactId>
					<version>${scoverage.maven.plugin.version}</version>
					<configuration>
						<scalaVersion>${scala.version}</scalaVersion>
						<scalacPluginVersion>${scoverage.scalac.plugin.version}</scalacPluginVersion>
						<!-- other parameters -->
						<minimumCoverage>${test.coverage.percentage.required}</minimumCoverage>
						<failOnMinimumCoverage>${scoverage.maven.plugin.failOnMinimumCoverage}</failOnMinimumCoverage>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>

			<!-- <plugin> <groupId>com.mycila</groupId> <artifactId>license-maven-plugin</artifactId> 
				<executions> <execution> <configuration> <dryRun>false</dryRun> </configuration> 
				<phase>validate</phase> <goals> <goal>format</goal> </goals> </execution> 
				</executions> </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<!-- <phase>verify</phase> -->
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.kuali.maven.plugins</groupId>
				<artifactId>graph-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>graphs</id>
						<phase>site</phase>
						<goals>
							<goal>dependencies</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<configuration>
					<scalaCompatVersion>${scala.minor.version}</scalaCompatVersion>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>doc-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/scala</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test/scala</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven.project.info.plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven.jxr.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<configuration>
					<additionalparam>-Xdoclint:none</additionalparam>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>${maven.changelog.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>${maven.changes.plugin.version}</version>
				<configuration>
					<githubAPIScheme>https</githubAPIScheme>
					<githubAPIPort>443</githubAPIPort>
					<onlyMilestoneIssues>false</onlyMilestoneIssues>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>github-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven.pmd.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>${maven.jdepend.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>${maven.taglist.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.kuali.maven.plugins</groupId>
				<artifactId>graph-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<profile>
			<id>doclint-java8-disable</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
							<additionalparam>-Xdoclint:none</additionalparam>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>oss-sonatype</id>
			<activation>
				<file>
					<exists>.signed</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<configuration>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<properties>
				<site.path>site/${project.version}</site.path>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-sources</id>
								<!-- <phase>verify</phase> -->
								<goals>
									<goal>jar</goal>
									<goal>test-jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
									<goal>test-jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
